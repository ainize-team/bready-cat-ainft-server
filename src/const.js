console.log(process.env.PROVIDER_URL)

const isProd = process.env.PROVIDER_URL === "https://mainnet-api.ainetwork.ai";

const SEED_RANGE = 4_294_967_295;

// Discord mock ID to bypass Discord and call API directly
const DISCORD_MOCK_ID = isProd ? "bready-cat" : "bready-cat-dev";

const BUCKET_NAME = isProd ? "bready-cat" : "bready-cat-dev";

const STORAGE_BASE_URL = "https://storage.cloud.google.com";

const GCP_SERVICE_ACCOUNT_BASE64_ENCRYPTED = isProd
    ? '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'
    : "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";

// NOTE(HAECHAN): GAS_PRICE for Prod will change;
const GAS_PRICE = isProd ? 0.0005 * 1e6 : 0.0005 * 1e6; // we will use 0.0005ain (1 ain == 1e6)

const CAT_TYPES = ["allblack", "chaos", "cheese", "mackerel", "milkcow", "threecolor", "tuxedo"]; // Will be added next gen cats.

module.exports = {
    DISCORD_MOCK_ID,
    BUCKET_NAME,
    STORAGE_BASE_URL,
    SEED_RANGE,
    GCP_SERVICE_ACCOUNT_BASE64_ENCRYPTED,
    GAS_PRICE,
    CAT_TYPES,
};
